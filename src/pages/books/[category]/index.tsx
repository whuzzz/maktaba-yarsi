import Head from 'next/head';
import { BackgroundImage, Breadcrumb, PageWrapper } from '@/common/components';
import API_CONFIG from '@/common/constant';
import { formatCategory, getData } from '@/common/helpers';
import ListBooks from '@/features/book/list-books';
import { Book, Categories } from '@/common/types/index.model';
import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType, NextPage } from 'next';
import { ParsedUrlQuery } from 'querystring';

const ListOfBookPage: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = ({
  listOfBook,
  category,
}) => {
  const categoryTitle = formatCategory(category);
  const linkRoutes = [{ title: 'categories', link: 'books/categories' }, { title: categoryTitle }];

  return (
    <>
      <Head>
        <title>Daftar Buku {categoryTitle} | YASLAB</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <PageWrapper>
        <Breadcrumb routes={linkRoutes} />
        <h1 className="mt-10 mb-14 pt-14 text-center text-5xl font-bold capitalize text-dark-200 dark:text-light-200">
          Daftar Buku {categoryTitle}
        </h1>
        <div className="space-y-5 px-20">
          {listOfBook.map(({ id, info }: Book) => (
            <ListBooks key={id} id={id} info={info} category={category} />
          ))}
        </div>
      </PageWrapper>
      <BackgroundImage />
    </>
  );
};

interface Params extends ParsedUrlQuery {
  category: string;
}

type Props = {
  listOfBook: Book[];
  category: string;
};

export const getStaticPaths: GetStaticPaths = async () => {
  const categories: Categories[] = await getData(API_CONFIG.GET_CATEGORIES);
  const paths = categories.map(({ category }) => ({
    params: { category },
  }));

  return { paths, fallback: 'blocking' };
};

export const getStaticProps: GetStaticProps<Props, Params> = async ({ params }) => {
  const { category } = params!;
  const categoryBook: Book[] = await getData(API_CONFIG.GET_CATEGORY(category));

  return { props: { listOfBook: categoryBook, category }, revalidate: 60 };
};

export default ListOfBookPage;
