import Head from 'next/head';
import { GetServerSideProps, InferGetServerSidePropsType } from 'next';
import API_CONFIG from '@/common/constant';
import { getData } from '@/common/helpers';
import { useAppDispatch } from '@/app/hooks';
import { closeModal } from '@/features/search/search-slice';
import { useEffect, useState } from 'react';
import { NavigationsButton, PageWrapper } from '@/common/components';
import { DisplayContent } from '@/features/book';

const SearchPage = ({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const dispatch = useAppDispatch();
  const [page, setPage] = useState(0);

  useEffect(() => {
    dispatch(closeModal());
  }, [dispatch]);

  return (
    <>
      <Head>
        <title>YASLAB</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <PageWrapper style="flex">
        <aside className="fixed h-full w-2/12 border-r border-black/10 bg-light-100 dark:border-gray-800 dark:bg-dark-100">
          f
        </aside>
        <section className="mt-3 ml-auto w-10/12 px-20 pb-20">
          <NavigationsButton />
          <DisplayContent content={data[page].text} />
          <NavigationsButton />
        </section>
      </PageWrapper>
    </>
  );
};

export default SearchPage;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const data = await getData(API_CONFIG.GET_SEARCH_TOPIC(context.resolvedUrl));

  if (data?.status === 'error' || data.length === 0 || data?.[0] === null) {
    return { redirect: { destination: '/', permanent: false } };
  }
  return { props: { data } };
};
